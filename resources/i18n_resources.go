// Code generated by go-bindata.
// sources:
// i18n/resources/de_DE.all.json
// i18n/resources/en_US.all.json
// i18n/resources/es_ES.all.json
// i18n/resources/fr_FR.all.json
// i18n/resources/it_IT.all.json
// i18n/resources/ja_JP.all.json
// i18n/resources/ko_KR.all.json
// i18n/resources/pt_BR.all.json
// i18n/resources/zh_Hans.all.json
// i18n/resources/zh_Hant.all.json
// DO NOT EDIT!

package resources

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _i18nResourcesDe_deAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x4d\x6f\xda\x4e\x10\xc6\xef\x7c\x8a\x11\x17\x5f\x08\x52\xae\xdc\xf8\x13\x43\xa2\xe4\x0f\x14\x43\x23\xb5\xf4\xb0\xd8\x83\xd9\x64\x3d\x4b\xf7\x05\x14\x2c\x7f\xad\x9e\x72\xcb\x17\xab\xd6\x86\xbc\xd5\x4b\x68\xa4\x5e\x90\x61\x77\x9e\x79\x1e\xef\xce\x8f\xef\x0d\x80\xbc\x01\x00\xd0\xe4\x49\xb3\x03\xcd\x39\x85\x64\x50\x01\x03\xb2\xd9\x02\x55\xb3\x55\xad\x1a\xc5\x48\x0b\x66\xb8\xa4\x6a\xdb\x00\x17\x48\x10\x71\x04\xe4\x84\xf0\x8d\xad\x84\x7b\x6a\x37\x1b\x00\x45\xeb\xbd\x6c\x97\x00\x95\x92\x0a\x64\x1c\x5b\xa5\x30\x81\xed\x0a\x09\x62\x85\xcc\x70\x4a\x41\xc8\x14\x96\x5c\x20\x04\x79\xde\x1e\x33\xb3\x2a\x8a\xa0\x33\xa7\x3c\x6f\x87\xae\xac\x28\xe6\x34\x27\x8f\x97\xff\x90\x67\x10\x2a\x6d\x50\x08\x24\x48\x50\xc1\x58\x49\x23\xef\xa5\x10\x09\x33\xc8\x5f\x8b\x02\xd7\xc6\xf9\x84\x3e\xae\x84\xcb\x69\x97\x29\x1a\x85\x06\xe9\xcf\x7e\x27\x47\x71\xce\x13\x9b\xad\x5d\x14\x85\x3f\x2d\x6a\xf3\x4e\xcd\xef\xbd\x34\xdc\xa5\xa5\x54\x09\x2a\x4b\x29\xec\xec\xeb\x38\xee\xed\x6a\x88\xd6\xc8\xe3\x15\x2a\x66\xf5\xce\xa6\xfa\xf4\x14\x9f\xcd\xa0\xd7\x92\x34\xfe\x6d\x08\xb3\x95\xca\xc0\x02\x77\x4f\x8f\xa9\xe0\xf1\xaa\xfc\x79\x9f\xc5\x45\xfb\x27\x61\x7a\xd2\x8a\x04\x48\x1a\x50\xc8\x12\x58\x2a\x99\x01\xa7\xb5\x35\x1d\xf0\x18\x3e\x56\x51\xdb\x22\x14\x6c\xad\x31\xe9\x78\xf4\xbe\xa2\xd2\x46\xb9\x4c\xd4\xa9\x17\xe8\x77\xaf\x6e\xc2\x0b\x4f\x79\x3f\xbc\xbc\x19\x84\x51\xef\xf2\xa6\x3b\x08\x87\xf5\x02\x57\xb4\x61\x82\x27\x60\xe4\x3d\x92\x37\xd8\x8c\xd2\xa7\x47\x61\x78\x8a\x1a\xa6\xfb\x9d\xb5\x72\xa3\x6b\x8f\xc2\xe8\xba\xbe\x60\x2c\x90\x69\x04\x2c\xe1\x10\x3c\x04\x2d\x08\xc8\x7d\x3c\xa0\x0e\x40\x2a\x08\x48\x06\x6d\x8f\xe6\x0b\x2a\x82\xbb\xe7\xc2\x3b\x16\x80\x74\xd7\x23\x20\xe4\x14\x1c\x61\xc7\x9b\xd6\x07\x2e\xc1\x02\xcd\x16\x91\xe0\x1c\x8c\x84\x3c\x6f\xf7\xa4\x25\x53\x14\x1f\x7b\x78\xc1\xd5\x6e\xcb\xb5\x3b\x33\x38\x07\x4b\xc9\x2b\x91\xd3\xcd\x54\x87\xb2\x14\xb2\xc2\x58\xe5\xed\x44\x0f\x87\xa3\x82\x81\x40\x6e\xee\x65\x96\xb1\xdd\x71\x8a\xd6\x36\xff\x5c\xcf\x0f\x78\xfd\xa6\xd3\x86\x09\x8b\xa7\x35\x20\xb8\x45\x65\x8e\x08\x4f\xc2\x2f\xb3\x30\x9a\xfa\x26\xa9\x3b\xec\x8f\x26\x17\xe1\x64\x36\x1c\x78\x26\x69\x12\x46\xe3\xd1\x30\x0a\xfd\x0a\xd3\xdb\xd1\x64\xea\xab\xc6\x4c\x1a\x04\x8d\x6a\x83\xaa\x62\x60\x1b\x22\xc3\x8c\xd5\x10\xcb\x04\x3b\xee\x16\x54\xdf\x7b\x32\xc1\xa2\x68\xed\x41\xf9\xbc\x58\xc2\xe8\xb0\x96\xa1\xd6\x2c\xad\x16\xfe\xaf\x9e\x8b\xc2\x37\xe5\xcf\x74\x83\x04\x33\x58\xa2\x72\xaf\x2b\x2a\x9d\x1c\x3c\x78\x2c\x54\xa5\xf5\x16\x86\x2c\x5e\x39\xf4\x98\x77\x26\x6a\xe3\xcf\x88\x2d\x04\xba\x89\xd1\x6c\x83\xb0\x16\x36\xe5\x04\xb1\xa4\x25\x4f\xbd\x50\x39\xe0\x7a\xff\xd7\x2a\x6c\x7a\xc6\xe9\xec\xba\x2c\xb2\xaa\xdc\x06\xe4\x1c\x40\xf6\xf4\xab\xc4\xfe\x9e\x3a\x8d\x1f\xbf\x03\x00\x00\xff\xff\x71\xd3\x48\x1f\x5f\x08\x00\x00")

func i18nResourcesDe_deAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesDe_deAllJson,
		"i18n/resources/de_DE.all.json",
	)
}

func i18nResourcesDe_deAllJson() (*asset, error) {
	bytes, err := i18nResourcesDe_deAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/de_DE.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesEn_usAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x94\x4f\x6f\xda\x40\x14\xc4\xef\x7c\x8a\x11\x17\x5f\x90\xa5\x5e\x7d\x8b\xa8\x2b\x45\x69\x0b\x2d\xcd\xa9\xf4\xb0\xd8\x0f\xc7\xea\xfa\xad\xbb\x7f\x88\x22\x6b\xbf\x7b\xe5\x18\x38\xa0\xdd\xb2\x8d\x50\x2e\x08\x34\x3b\xbf\x99\xc5\x7e\xef\xe7\x0c\x18\x66\x00\x30\x6f\xeb\x79\x81\xf9\x96\x4b\xb6\xa4\x21\xc0\xae\xdb\x91\x9e\x2f\x26\xd5\x6a\xc1\x46\x0a\xdb\x2a\x0e\x1e\x9b\x01\x7e\x71\x09\xbb\x63\x90\xd6\x4a\x43\x55\x95\xd3\x9a\x6a\x3c\x3f\x11\xa3\xd2\x24\x6c\xcb\x0d\xa4\x6a\xb0\x6f\x25\x21\x1b\x86\x7c\x2d\xec\x93\xf7\x59\xb1\xe5\x61\xc8\xcb\xd1\xe6\xfd\x96\xb7\x1c\x69\x70\x1b\x76\x72\xed\x91\x54\xbb\xae\x1f\xd1\x9a\xfe\x38\x32\xf6\x82\xf6\x1f\x3d\x13\x60\x6f\x2c\x66\x7a\xc5\x86\x6e\xd5\x2c\x4c\x0b\x56\x5b\x2a\x27\x6b\xb0\xb2\xd0\x24\x6a\xec\xb5\xea\xd0\x72\xef\x6c\x81\x48\xfc\xbf\x1c\xc1\x88\x52\x8a\xde\x50\x5d\x44\x78\x67\x39\x68\xfe\x74\x77\xff\xb9\xfc\x18\xb1\x1e\xc5\xa0\xf1\x9e\x0f\x42\xb6\x35\xac\xfa\x4d\x1c\xbd\xcc\xe5\xa9\x20\x6a\xf5\x10\x71\xaf\x1e\xc2\x86\xb5\x24\x61\x08\xf4\x3a\x6a\xd9\x4b\xb6\x40\xc6\xe3\xc7\x0b\x99\x0c\x4a\x23\x63\x95\xe5\x11\x66\x9a\xf7\x7a\xec\x69\xc2\xb1\x23\xfb\x4c\xc4\xf8\x00\xab\x30\x0c\xf9\x52\x39\xb6\xde\x27\xe5\x5f\x87\xa4\x14\x99\xfe\xe2\xbd\x54\xd3\x84\x4f\xc8\xc4\xfc\x88\x37\x3d\xf6\x0d\x69\xe9\x21\x07\x21\x1d\x25\xb1\x8f\x27\x83\xc8\xef\xe5\xb7\xc7\x72\xf3\x23\x36\x20\x67\x39\x62\xde\xac\x57\x5f\x37\x65\xdc\x7d\xd2\xc3\x76\xea\x94\x25\x18\xd2\x07\xd2\xd3\x5e\xc9\xb1\xb1\xc2\x3a\x83\x4a\xd5\x54\x8c\x4f\x7b\xfa\xbd\x54\x35\x79\xbf\x38\x2e\x9f\xb3\xf8\xba\x60\x4e\x5a\x47\xc6\x88\x66\x12\xbe\x4c\xdf\xbd\x8f\x35\x7b\x8f\xe8\xe0\xa5\x1f\x59\xec\x24\x8d\xaf\xb2\x11\x07\x42\x2f\x5d\xd3\x32\x2a\xc5\xfb\xb6\x89\xae\x8a\x2b\xa6\x31\x68\xf6\xeb\x6f\x00\x00\x00\xff\xff\x04\xbf\x88\xc2\x98\x07\x00\x00")

func i18nResourcesEn_usAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesEn_usAllJson,
		"i18n/resources/en_US.all.json",
	)
}

func i18nResourcesEn_usAllJson() (*asset, error) {
	bytes, err := i18nResourcesEn_usAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/en_US.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesEs_esAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xbd\x6e\x22\x49\x10\xce\x79\x8a\x12\xc9\x24\x08\xc9\x29\x99\x85\xe7\x24\x74\x3e\xe3\x03\x3b\x3a\x2e\x68\xa6\x8b\xa1\x77\x9b\x2a\x5c\xdd\x3d\x96\x85\xe6\x61\xf6\x11\x56\xce\x36\xe5\xc5\x56\x3d\x8d\xf7\x87\xa5\xbd\xd8\xda\x04\x31\xaa\xf9\x7e\xaa\x4a\xf5\xcd\x7f\x3d\x80\x5d\x0f\x00\xa0\x6f\x74\x7f\x04\xfd\x05\x95\xe4\x51\x40\x01\x85\xcd\x12\xa5\x3f\x48\x55\x2f\x8a\x9c\x55\xde\x30\x1d\x5e\x73\x95\x98\xa5\x82\x40\x40\xfb\x2f\x1b\x14\xee\xf7\x00\xda\xc1\x31\xe1\x25\x01\x8a\xb0\x00\x57\x55\x10\x41\x0d\x8f\x6b\x24\xa8\x04\x95\x37\x54\x83\xe5\x1a\x56\xc6\x22\x14\xbb\xdd\xf0\x56\xf9\x75\xdb\x16\xa3\x05\xed\x76\xc3\x32\xc2\xda\x76\x41\x0b\xca\xb8\x98\x23\xac\x15\x6c\x85\x75\xa8\x8c\xe6\xe8\x25\x69\x29\xdb\x09\x08\xa0\x05\x25\xd5\xda\x34\x0c\x1a\x41\xb0\x36\xce\x0b\xbf\xae\x75\x76\x1b\xd1\xb5\x0e\x9b\x6d\x6c\x43\xf0\x21\xa0\xf3\x47\x6c\xef\xf0\xdd\xb0\xad\x94\x80\x55\xe0\xd8\x9a\xca\xf8\xa0\x8f\x49\xdf\x69\xd0\x6d\x99\x1c\xfe\x49\x87\x91\x33\x76\xad\xce\x72\x38\xe6\x60\x35\x10\x7b\x10\x54\x1a\x56\xc2\x1b\x30\xb4\x0d\x7e\x04\x19\x17\xaf\x21\x4e\x4a\x94\x56\x6d\x1d\xea\x51\x86\xef\x2e\x3e\xc6\xe9\x18\xcd\xa3\xd3\x0c\x7f\x5d\x4e\xae\xcb\xab\x0c\xbe\x9c\xcd\xa6\xb3\xd3\xb8\x09\x35\xca\x1a\x0d\x9e\x3f\x22\x65\x1b\x9a\xe3\xfe\xb3\xb2\x40\x0c\xcd\xfe\x93\x35\x5a\xe5\x1a\x99\xfe\x9d\x1d\x89\x08\x56\x3e\x73\x6c\xb7\x16\x95\x43\xc0\xee\x84\x8b\xa7\x62\x00\x05\xc5\x9f\x27\x74\x05\xb0\x40\x41\x5c\x0c\x73\xcd\xb9\x2d\x56\x66\x65\x1e\x02\xfe\x0a\x3d\x20\x7f\x2f\xfa\x92\x1b\xb0\x44\xff\x88\x48\x70\x01\x9e\x61\xb7\x1b\x8e\x39\x90\x6f\xdb\x73\xd4\xbf\x47\x4a\x24\x15\x84\x0b\x78\xfa\x89\xe2\x1c\x1b\x69\x1d\x2b\xcb\x29\x66\x92\xab\x37\xaa\xaf\x2c\x7b\x45\x1e\x0f\xdb\xe2\xb7\x28\xbf\x4b\xf0\x0d\x3a\x8d\xb2\x01\xcf\xa4\x6f\x94\x65\xc9\x90\xce\xca\x7f\xef\xcb\xf9\x5d\xee\x64\xe6\xd3\xeb\xc9\x78\x72\x77\x7f\x95\xb9\x97\x59\x39\xbf\x9d\xde\xcc\xcb\x1c\x3e\xd6\x23\xff\x65\x0e\x8f\x1b\xf6\x08\x0e\xa5\x41\x49\x19\x33\x84\xb9\x57\x3e\x38\xa8\x58\xe3\x28\x2e\x3e\x3d\x8f\x59\x63\xdb\x0e\x0e\x41\xf4\xad\xd8\xa5\xce\x4b\x6d\x83\xce\xa9\x3a\x15\xfe\x49\xff\xdb\x36\x37\xa4\x8e\x47\xa3\xed\xd4\x8d\x66\x01\x89\x6e\x78\x08\xe3\xfd\xb3\x36\x75\xf7\xcd\x88\xf1\xa6\xf9\x84\x8d\xea\x87\x77\x22\xd3\x29\x33\xe4\xd4\x87\x63\x33\x27\xc7\x70\x4f\x6a\x69\x31\x9e\x8a\x53\x0d\xc2\xd6\x86\xda\x10\x54\x4c\x2b\x53\x67\xd3\xe4\x86\xc1\xa5\x9c\x66\x1d\x43\xba\x0e\x4a\x74\x4a\xe6\x84\x0c\xa2\x2a\xb3\x7f\xa6\xae\xc9\xc4\x99\xd6\xd0\xfb\xff\x6b\x00\x00\x00\xff\xff\xb7\xcb\x30\x13\xf9\x07\x00\x00")

func i18nResourcesEs_esAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesEs_esAllJson,
		"i18n/resources/es_ES.all.json",
	)
}

func i18nResourcesEs_esAllJson() (*asset, error) {
	bytes, err := i18nResourcesEs_esAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/es_ES.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesFr_frAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xcd\x6e\x1a\x31\x10\xbe\xf3\x14\x9f\xb8\xec\x85\x22\xe5\xca\x2d\x22\x5b\x35\xcd\x6f\x43\x73\x2a\x3d\x98\xf5\x40\xdc\x7a\xc7\x74\x6c\x13\xa5\x68\x1f\x88\xbe\x06\x2f\x56\x79\x37\x89\x54\x8a\x13\x92\xcb\xca\xd6\xf8\xfb\xf1\x8e\xe6\xf3\xb7\x1e\xb0\xee\x01\x40\xdf\xe8\xfe\x08\xfd\x29\x97\x1c\x48\xa0\xc0\xb1\x9e\x91\xf4\x07\x5d\x35\x88\x62\x6f\x55\x30\x8e\x9f\x8f\x09\xfd\x46\x64\xb0\xab\x67\x42\xfd\x1e\xd0\x0c\x76\xe9\x8e\x19\x24\xe2\x04\xae\xaa\xa2\x08\x69\xdc\xdf\x11\xa3\x12\x52\xc1\xf0\x02\xd6\x2d\x30\x37\x96\x50\xac\xd7\xc3\x6b\x15\xee\x9a\xa6\x18\x4d\x79\xbd\x1e\x96\x09\xd6\x34\x53\x9e\x72\xc6\x43\x29\x42\x51\x60\x9d\x78\x68\x82\x55\xa8\x64\xbb\x69\xcb\xd0\x11\x73\x53\xdd\x19\x12\xfc\x70\x51\x58\xd9\x97\x15\x0e\x36\x9f\xbc\xea\x58\x2f\x93\x79\xa1\x5f\x91\x7c\xd8\x61\x3b\xd8\xad\xa6\x5a\xb1\xa6\xb4\x5b\x19\xad\x16\x84\x5d\xa6\x77\xba\xf2\x4b\xc7\x9e\xde\x6b\x4b\xb6\x9b\x16\xff\x56\x5f\x63\x17\xad\x06\xbb\x00\x21\xa5\x31\x17\x57\xc3\xf0\x32\x86\x11\x32\xda\x2f\x21\xf6\x4a\x94\x56\x2d\x3d\xe9\x51\xee\x2e\x95\x8b\x76\xbb\xc1\x68\x3f\xfa\xe3\xf1\xe9\x79\x79\x92\xc3\x8e\x3f\x95\xe3\xfd\xb8\x53\x5e\x29\x6b\x34\x82\xfb\x49\x9c\xbd\xcc\x67\x0a\x2e\xcd\x02\xa3\x3d\x4d\xc8\x5d\xe2\xea\x2c\xc3\x70\x75\xb6\x1f\x70\x6d\x49\x79\x02\xb5\x73\x59\x3c\x14\x03\x14\x9c\x3e\x0f\xe4\x0b\x38\x41\xc1\xae\x18\x66\x38\xcf\x0b\xe2\x20\xdb\x0d\x41\x3b\x13\xb0\xfd\x13\x84\xfe\xe7\x88\x8f\x1c\xaf\xcb\x3f\xc5\x02\x66\x14\xee\x89\x18\x47\x08\x0e\xeb\xf5\x70\xec\x22\x87\xa6\xc9\xf9\xd8\x4d\x8b\x44\x27\x84\x23\x50\xf8\x07\x7d\x88\x83\xae\x1b\x73\xeb\xba\x08\xe9\x0c\x1d\x2c\x3c\xb7\x2e\x04\xc5\xe1\xb1\x4d\x6f\x91\x7c\xa3\xd2\xe1\x02\x2b\x65\x23\xbd\xca\xdb\x32\x52\x94\x0c\xe3\x4d\xf9\xe5\xb6\x9c\x7c\xcd\x0d\xc7\x49\x79\x71\x7c\x79\x52\xe6\x86\xe3\xa6\x9c\x5c\x5f\x5d\x4e\xca\x1c\xfc\xa6\x6c\xcb\x59\x38\xd5\x2e\x10\x3c\xc9\x8a\xa4\xcb\xa7\x21\x26\x41\x85\xe8\x51\x39\x4d\xa3\xd4\xe5\x6e\x3f\x76\x9a\x9a\x66\xf0\x18\x62\xcf\xc5\x36\x5d\x9e\x6a\x35\x79\xaf\x16\x5d\xe1\xa2\x5b\x37\xcd\xcb\x09\xa6\x63\xa7\x9e\x96\xc6\xa7\x0e\x0f\x91\xe8\x52\x8c\xf9\x24\x1c\xb0\xc7\x44\xd5\x9e\x28\xa8\xe3\xc8\x1a\xc1\x8e\x93\xbd\xff\xe0\x96\xd5\xcc\x52\x9a\x07\xaf\x56\x84\xa5\x8d\x0b\xc3\xa8\x1c\xcf\xcd\x22\x1b\x1b\xa7\xf5\xd2\x79\x6f\x12\x50\x17\xc4\x42\x0b\xe3\x83\x90\xb4\xcf\x59\x0b\x8d\xf2\xfc\xa4\x25\xca\x0f\x86\x9f\xa2\xa5\xf7\xfd\x6f\x00\x00\x00\xff\xff\xb0\x98\xc5\x6b\xbf\x07\x00\x00")

func i18nResourcesFr_frAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesFr_frAllJson,
		"i18n/resources/fr_FR.all.json",
	)
}

func i18nResourcesFr_frAllJson() (*asset, error) {
	bytes, err := i18nResourcesFr_frAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/fr_FR.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesIt_itAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x3d\x6e\xdb\x4a\x10\xee\x75\x8a\x0f\x6a\xd8\xe8\x09\x70\xab\xce\xd0\xe3\xc3\x23\x9c\x58\x8a\x28\x57\x51\x8a\x15\x39\x92\x17\x59\xce\x30\xbb\x4b\x1a\x0e\xc1\xfb\xa4\xc8\x2d\x7c\xb1\x80\xa4\x2c\x24\x82\xd6\x96\x0d\xa4\x21\x48\xcc\x7c\x3f\xc3\xc5\x7c\xfb\x79\x04\x34\x23\x00\x18\xeb\x7c\x3c\xc3\x78\xc3\x31\x7b\xb2\x50\xe0\xaa\xd8\x92\x1d\x4f\x86\xaa\xb7\x8a\x9d\x51\x5e\x0b\x0f\x6d\x49\x51\x90\xf7\x1a\x15\x77\x9d\x64\x65\x3c\x02\xda\xc9\x29\xdf\x35\x83\xac\x15\x0b\xc9\xb2\xca\x5a\xca\xf1\x70\x4f\x8c\xcc\x92\xf2\x9a\xf7\x30\xb2\xc7\x4e\x1b\x42\xd4\x34\xd3\xa5\xf2\xf7\x6d\x1b\xcd\x36\xdc\x34\xd3\xb8\x83\xb5\xed\x86\x37\x1c\x30\x91\x6a\x3c\xfd\x40\x4d\x56\xef\x74\xa6\xbc\x74\x5e\x7a\x31\x42\x5e\x59\xc5\x9e\x60\x54\x2f\xf5\x5d\x0b\x13\x72\x32\x83\x56\xae\x7b\xdd\x17\x25\x2f\x9e\xa6\x27\xac\x8a\xb2\x9b\xc6\xd2\xb7\x8a\x9c\x3f\x61\x7b\xbf\x7d\x6d\x7a\xea\xce\xb9\x51\xb0\x3a\xbb\xd7\xe4\xbc\x3a\xe5\x7f\xa7\x57\x57\x0a\x3b\xfa\x6b\x66\x5d\x29\x97\x7a\x9d\x4b\x65\x72\xb0\x78\x58\x52\x39\x76\x56\x0a\x68\x2e\x2b\x3f\x43\xc0\xcf\x4b\x88\xb3\x12\xb1\x51\xa5\xa3\x7c\x16\xe0\x5b\x5b\xe5\x32\xb1\x4e\x66\xe7\xe1\xff\x5d\x27\x1f\xe2\x7f\x03\xe0\xdb\xc5\x2d\x56\xc9\x5d\x3a\x4f\xd6\x8b\xf3\xf0\x84\x6b\x65\x74\x0e\x2f\x5f\x89\x83\x43\xad\xbb\x2a\x58\x18\x7d\xb7\x84\x66\x59\xdc\x04\x08\x16\x37\xe7\x01\x4b\x43\xca\x11\xa8\x5f\xed\xe8\x31\x9a\x20\xe2\xee\xf1\x48\x2e\x82\x58\x44\x2c\xd1\x34\xc0\xf9\xbc\xe8\x91\x3b\xc2\xdc\xd3\xcf\x08\x72\x40\xbd\x2e\xf8\x9c\x25\xd8\x92\x7f\x20\x62\x5c\xc1\x0b\x9a\x66\x3a\x97\x8a\x7d\xdb\xbe\xa6\x7c\x8c\x18\x64\x52\x94\x96\x9c\xc0\x5b\x85\x2b\xd0\x1f\x24\x97\x18\x19\x4e\x61\x67\x64\x48\x9f\xc1\xd7\xe5\xfa\x39\x65\xba\x50\x86\x0e\xe7\xf3\x16\xcd\xb7\x4a\x5d\xae\x50\x2b\x53\xd1\x05\xc4\xb5\x32\x62\x29\xc0\xb8\x8a\x3f\xdd\xc5\xe9\x3a\xb4\x1e\xab\x64\xfe\x7f\x12\xa7\xeb\xeb\xc0\x7a\xac\xe2\x74\xb9\xb8\x4d\xe3\x30\x3e\x5d\x2e\x5e\x80\x53\x21\x9e\xe0\xc8\xd6\x64\x87\x5c\x99\x22\xf5\xca\x57\x0e\x99\xe4\x34\xeb\x0e\x7a\xf8\x9e\x4b\x4e\x6d\x3b\x39\x64\xdb\xb1\xd8\x07\xcc\x73\xad\x20\xe7\xd4\x7e\x28\x7c\x1c\xde\xdb\x36\xe0\x2c\x1e\x42\xec\x20\x6d\x3b\x23\x32\xc5\x5c\x72\x9d\xf5\x17\x85\xf3\xca\xcb\x19\xfd\xec\xd8\x31\xc4\x60\xc8\xc5\x5e\xcb\x89\x8f\xb3\x7f\xe0\x8e\xd5\xd6\x50\xb7\x17\x4e\xd5\x84\xd2\x54\x7b\xcd\xc8\x84\x77\x7a\x1f\xcc\x8b\xa4\x28\xc5\x39\xbd\xed\x62\xdd\x29\x53\x2b\x3b\xdc\x78\x3d\xaa\xb2\xbf\x5d\x7b\x1d\xdf\x3f\x9a\x0f\x81\x32\xfa\xf2\x2b\x00\x00\xff\xff\xb9\xd0\x92\x35\xf8\x07\x00\x00")

func i18nResourcesIt_itAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesIt_itAllJson,
		"i18n/resources/it_IT.all.json",
	)
}

func i18nResourcesIt_itAllJson() (*asset, error) {
	bytes, err := i18nResourcesIt_itAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/it_IT.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesJa_jpAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\xcf\x6f\x1b\x45\x14\xc7\xef\xfe\x2b\x9e\x7c\xd9\x8b\x65\xa9\x57\xdf\xaa\xb0\x48\x55\x81\x84\x9a\x9e\x30\x87\x8d\x77\xec\xae\x58\xcf\x98\xfd\xe1\xca\xb2\x56\xda\x99\x2d\x52\x7e\xb8\x34\x2a\xb5\x4c\xd5\xa0\x10\x14\x1a\x48\xe4\xc4\x91\x15\x94\x60\x20\x7f\xcc\xcb\xae\xe1\xbf\x40\xb3\x9b\x04\x2b\xf1\x04\x2b\x0a\x97\xd1\x24\x6f\xde\x9b\xcf\x7b\xe3\xef\x77\x3f\xcf\x01\x74\x72\x00\x00\x79\xcb\xcc\x97\x20\x5f\xa1\x3a\xf5\x88\x03\x06\x50\xbf\xb1\x4c\x9c\x7c\x21\x8b\x7a\x8e\x41\x5d\xdb\xf0\x2c\x46\xb3\x63\x49\x6f\x18\x87\x3b\x28\x5e\xc7\x5f\xff\x14\xaf\xbd\x43\xde\x47\xfe\x1e\xf9\x2b\xe4\x3f\x20\xef\x21\x7f\x91\xcf\x01\x04\x85\xeb\xf5\x1f\x52\x20\x8e\xc3\x1c\x60\xd5\xaa\xef\x38\xc4\x84\xe7\xcf\x08\x85\xaa\x43\x0c\xcf\xa2\x75\xb0\x59\x1d\x6a\x96\x4d\x40\xeb\x74\x8a\x4b\x86\xf7\x2c\x08\xb4\x52\x85\x76\x3a\x45\x5d\xa6\x05\x41\x85\x56\xa8\x02\x0a\xa3\x01\x8a\x21\x46\x63\x8c\x7a\x28\xb6\x51\xec\x60\xb4\x3f\x5d\x08\x50\xbc\x3e\xff\x63\x33\x59\xd9\x38\x3f\x19\x20\xdf\x47\xf1\x33\x46\xbf\x60\xf4\x3b\xf2\xee\xe4\xed\x6f\x93\x37\x5b\x69\x1b\x7f\xa6\xeb\xd6\xcd\x6b\xe7\xee\x48\x36\x60\xfa\x8d\xa6\xec\xc8\x21\x5f\xf9\xc4\xf5\xae\x55\x53\xb4\xf0\xd7\x7b\x9e\x1c\x09\xe4\x07\x18\x85\x18\x8d\x30\xea\xdf\x81\xf4\xae\x9c\x6e\x93\x51\x97\xcc\x07\x1a\x9f\x6d\x4e\x06\x6f\xfe\x17\xd0\x05\xe6\xdb\x26\x50\xe6\x81\x43\x0c\x13\x6a\x0e\x6b\x80\x45\x9b\xbe\x57\x02\x05\xcc\x6d\x19\x33\xaf\xd0\x6d\xa3\xe9\x12\xb3\xa4\xa8\x37\x39\xee\xfe\xcd\xbf\x29\xcd\xce\xfd\xf0\xe1\xa3\x8f\xf4\x0f\x54\x63\xd9\x39\x4a\x7a\xfd\xd9\x89\x8f\x68\xcb\xb0\x2d\x13\x3c\xf6\x25\xa1\xca\x5e\x30\x5a\x91\xd3\x13\x87\x72\xaa\xbc\x3b\x79\xb1\x1d\xaf\x9d\x22\xdf\x45\xfe\x56\xd5\xcd\xe2\x63\x45\xad\xc5\xc7\xb3\x13\x96\x6c\x62\xb8\x04\x48\xaa\x74\xad\xad\x15\x40\xa3\x72\x69\x13\x57\x03\xe6\x80\x46\x99\x56\x54\xf1\x85\xdd\x36\x86\x2f\x31\xe4\x18\x76\xe9\xd5\xae\x4d\xdc\x8b\xbd\x7c\xeb\x2d\xe4\x87\x32\xcc\xe4\xff\xd4\x16\x81\xa1\x98\x03\xf0\xd2\x8a\x60\x99\x78\xcf\x09\xa1\xf0\x00\x3c\x06\x9d\x4e\x71\x81\xf9\xd4\x0b\x02\x15\xe9\x03\x40\xbe\x8e\x62\x75\xea\x28\xa4\x74\xbb\xc8\x0f\xfe\xd3\xbe\xe6\x65\xcb\xde\xb4\x66\xb3\xcc\xbf\x32\x54\x15\x52\xb2\xb9\x9a\xbe\xe6\x5e\x72\x7c\x10\xaf\xf7\xe2\xe1\xab\xa4\x37\x9c\x88\xd3\xa4\x37\xbc\x37\x94\x79\x09\xee\x67\x00\x2d\xc3\xf6\x89\xea\xb2\x3b\x5e\xf0\x44\xff\xf4\xa9\x5e\xfe\x4c\xa5\xce\xcc\x23\x15\xea\x7c\xa2\x97\x97\x16\x3f\x29\xeb\xaa\xe4\xcc\xb7\x54\xc9\xa4\xc1\x3c\x02\x2e\x71\x5a\xc4\xc9\xdc\xb2\x08\x65\xcf\xf0\x7c\x17\xaa\xcc\x24\x25\xf9\x53\xca\xfe\x5e\x60\x26\x09\x82\xc2\x85\xa5\x5e\x05\x53\x6b\xbb\x8c\x35\x88\xeb\x1a\xf5\x2c\xf0\x71\xb6\x0f\x02\xa5\xec\xf7\x30\xfa\x51\x2a\x5f\xea\x7f\x8c\xe2\x38\xdd\x6f\xa4\xeb\xf8\x5f\x57\x0d\x05\x4c\xd6\x7e\x4d\x46\x1c\xc5\x28\x8d\xad\xde\x80\x92\x22\xbc\x3a\x2f\x73\xa7\x0f\x4e\x01\xca\x73\xd1\x36\x46\x11\x8a\x71\x6a\x39\x27\xd7\x48\x67\xce\xe8\x29\x35\x96\x6d\x22\x15\xe8\x1a\x2d\x02\x4d\xdb\xaf\x5b\x14\xaa\x8c\xd6\xac\xfa\x2d\xa6\xd6\x97\x3c\x62\x98\x7e\x93\x47\xc9\xee\x7a\xb2\xb2\x21\x3f\xc6\x67\xdf\xc7\x83\xef\x52\x45\xbe\x4c\xa5\xf9\x0e\xc5\xb7\x17\x36\x97\xfb\xe2\x9f\x00\x00\x00\xff\xff\xa6\x71\xc2\x7c\x9d\x08\x00\x00")

func i18nResourcesJa_jpAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesJa_jpAllJson,
		"i18n/resources/ja_JP.all.json",
	)
}

func i18nResourcesJa_jpAllJson() (*asset, error) {
	bytes, err := i18nResourcesJa_jpAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/ja_JP.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesKo_krAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x4f\xdb\x48\x14\xc7\xef\xf9\x2b\x9e\x72\xf1\x25\x1b\x89\x6b\x6e\x88\xf5\x4a\x68\x7f\xc0\x92\xe5\xb4\xd9\x83\x89\x27\xc1\x5a\x67\x26\xeb\x1f\x41\x28\xb2\x14\x16\x17\x45\x38\x95\xa0\x4d\x5a\xb7\x8d\x69\x2a\x25\xa2\x48\x41\x0a\x29\x88\x1c\xe0\x1f\xf2\x3c\xff\x0f\x95\x63\x68\x29\xcd\xb4\x51\x69\x2f\x51\xac\x37\xdf\xf7\x3e\x6f\xde\xbc\xef\xdf\x29\x80\x7a\x0a\x00\x20\xad\xa9\xe9\x1c\xa4\x0b\x54\xa6\x16\x31\x40\x01\x6a\x57\x36\x88\x91\xce\x24\x51\xcb\x50\xa8\xa9\x2b\x96\xc6\x68\x72\x8c\x8f\x9b\x91\x3f\x01\x3c\x7a\xc4\x7b\x83\x74\x0a\xc0\xc9\xdc\xcf\xb5\x48\x81\x18\x06\x33\x80\x15\x8b\xb6\x61\x10\x15\xb6\x36\x09\x85\xa2\x41\x14\x4b\xa3\x65\xd0\x59\x19\x4a\x9a\x4e\x40\xaa\xd7\xb3\xab\x8a\xb5\xe9\x38\x52\xae\x40\xeb\xf5\xac\x1c\xcb\x1c\xa7\x40\x0b\x54\x00\x70\x47\x02\xfc\x4d\x37\xbc\x9c\x40\xd4\x6a\x61\x70\x85\x81\x0b\x78\x74\x88\xee\x59\xd4\xe9\x01\xef\xb4\x80\x7b\x7d\x0c\x5a\x80\x7e\x9f\x0f\xfc\x70\xd4\x00\x3e\xea\xe2\x6e\x10\x3d\x6b\xe2\xfe\x05\xf7\x9a\xdc\xeb\x67\xe1\xb3\xb2\x73\x77\x14\x37\xa0\xda\x95\x6a\xdc\x91\x41\xfe\xb3\x89\x69\xdd\x6b\x42\xd0\x02\xbe\x6c\xe3\xf8\x34\xe6\xe5\x8f\xfb\x51\xdb\x7d\x00\xef\xb7\xd2\x9a\x55\x46\x4d\x32\x27\x6e\x70\xc8\xbd\x8b\x1f\x88\xbb\xc4\x6c\x5d\x05\xca\x2c\x30\x88\xa2\x42\xc9\x60\x15\xd0\x68\xd5\xb6\x72\x20\x40\xfa\x92\x62\x66\x09\x59\x57\xaa\x26\x51\x73\x82\x7c\xe1\xf8\x3a\x7c\x77\x05\xe8\x75\xc3\x91\x9b\x9b\x9d\xe2\x97\xc5\xe5\xdf\xe4\x9f\x45\x77\xe4\xf5\xa3\xd6\xdb\xd9\xc2\x65\x5a\x53\x74\x4d\x05\x8b\xfd\x4b\xa8\xb0\x25\xf4\x87\x7c\xd4\xe6\x83\x73\x3c\x6e\x00\x76\xf6\x31\x68\x40\xb4\xd7\x8b\x76\x46\xa2\x9e\x56\x7e\x15\xa4\x8a\x5e\x74\x30\x98\xcc\x16\xad\xea\x44\x31\x09\x90\xe9\xae\x4b\xdb\x52\x06\x24\x1a\xff\x6c\x13\x53\x02\x66\x80\x44\x99\x94\x15\xad\xde\xc7\xe3\xe8\x37\x25\xe0\xfe\x01\xdf\x6f\x83\x84\x1d\x97\x7b\x4d\xf4\xfb\x12\x1f\x5c\xdd\x18\x43\xd4\xf1\xd1\x3b\x45\xaf\x8b\x7e\x3f\x3b\x07\xca\xad\xed\xc0\x06\xb1\xb6\x08\xa1\xb0\x00\x16\x83\x7a\x3d\xbb\xc4\x6c\x6a\x39\x8e\x88\x69\x01\x7e\xba\x73\x0a\xf0\xff\x21\x06\xe7\x18\xf8\x80\x4d\xff\x21\x34\xc9\xc8\x4a\x3a\x4b\x1c\x2b\x81\x13\x41\xdc\xce\x6e\x92\x08\xbe\x4f\xed\x79\x4b\x3e\xa8\x58\x4d\xd1\x6d\x22\xaa\x11\x8e\x9e\x24\xa6\x3a\x67\xe6\x35\xf9\xcf\x75\x39\xff\x97\x68\xc9\x12\xdb\x13\x6c\xd7\x9a\x9c\x5f\x5d\xf9\x23\x2f\x0b\xc5\x53\x13\x12\x89\x49\x85\x59\x04\x4c\x62\xd4\x88\x91\x58\x5f\x16\xf2\x96\x62\xd9\x26\x14\x99\x4a\x72\xf1\x13\x49\xbe\x97\x98\x4a\x1c\x27\x73\xe3\x8f\x1f\x82\x53\x87\xba\x8d\x55\x88\x69\x2a\xe5\x24\xf0\x7b\xf2\xdf\x71\x44\x5c\xaf\x0e\xc2\xf1\x09\xa0\xdb\xe5\x63\xf7\x2b\x5e\x88\xbb\x3b\xd1\x6e\x17\xf0\xba\xcd\x9f\x76\x67\x30\x25\xea\xbb\xf1\x4f\xb0\xf8\x49\x3b\xbe\xfe\xe3\xc6\x3d\xb0\x99\x57\xb2\x4e\x95\x0d\x9d\xc4\x3b\x64\x2a\x35\x02\x55\xdd\x2e\x6b\x14\x8a\x8c\x96\xb4\xb2\xd0\x83\xa2\x76\x8b\xbf\x1e\x86\x97\x13\x0c\x26\x10\x5e\x0c\xd1\x3d\x9b\x3e\x80\x5e\x03\x8f\x06\xb1\xed\x63\xd3\x07\x7c\xbe\x87\x41\x2b\x99\x44\xea\x9f\xf7\x01\x00\x00\xff\xff\xa1\x58\x4d\x9f\x48\x08\x00\x00")

func i18nResourcesKo_krAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesKo_krAllJson,
		"i18n/resources/ko_KR.all.json",
	)
}

func i18nResourcesKo_krAllJson() (*asset, error) {
	bytes, err := i18nResourcesKo_krAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/ko_KR.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesPt_brAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\xbf\x6e\x13\x41\x10\xc6\x7b\x3f\xc5\xc8\xcd\x35\xc6\x52\x5a\x77\x96\x73\x11\x56\xfe\x38\xc4\x4e\x85\x29\x36\xb7\x63\x67\xc5\xde\x8c\xb3\x7f\x2e\x0a\xa7\xab\x28\x78\x0e\x94\x02\x51\x50\xd1\xd1\xde\x8b\xa1\xbd\x73\x08\x98\xdb\xc4\x41\x34\x96\xad\xb9\xef\xfb\x7e\x73\xeb\x99\x7d\xdb\x03\x28\x7b\x00\x00\x7d\x25\xfb\x23\xe8\x2f\x29\x25\x87\x06\x04\x90\xcf\xaf\xd0\xf4\x07\x6d\xd5\x19\x41\x56\x0b\xa7\x98\xda\xc7\xa6\x64\x95\x11\xe0\x73\xa0\xfa\x47\x8e\x86\xfb\x3d\x80\x6a\xb0\xeb\x37\x26\x40\x63\xd8\x00\x67\x99\x37\x06\x25\xdc\x5e\x23\x41\x66\x50\x38\x45\x6b\xd0\xbc\x86\x95\xd2\x08\x49\x59\x0e\xcf\x85\xbb\xae\xaa\x64\xb4\xa4\xb2\x1c\xa6\x41\x56\x55\x4b\x5a\x52\x04\x62\x96\xb1\x31\xe8\x03\x43\xc8\x00\xc1\x90\x19\x25\x0c\x30\x08\x73\xe3\x55\xc1\x20\xb1\x49\x78\xd2\x7c\x6f\xee\x80\x29\x7d\xbe\x09\xdc\x06\x6f\x3c\x5a\xb7\xe3\xb6\x3f\xe8\x4a\x7c\x40\xd3\xb8\x81\x14\x60\x59\xab\x4c\x39\x51\x7f\xa9\xef\x79\xd7\xf3\x1f\xf9\xec\x86\xc9\xe2\x7f\x02\x6c\xec\xac\x13\x7b\xb1\x4d\xd8\x6b\x09\xc4\x0e\x0c\x0a\x09\x2b\xc3\x39\x28\xda\x78\x37\x82\x48\xfe\x53\x8a\xce\x88\x54\x8b\x8d\x45\x39\x8a\xf8\x1d\x62\x68\x48\x49\x1e\x75\xcb\x8f\xc6\xd3\x93\xf4\x30\x06\x33\x3b\x85\xa3\xf1\xc9\xeb\x71\xb7\x76\x4a\x85\xd0\x4a\x82\xe3\xf7\x48\xd1\x8e\x16\xa1\x0a\x8a\x8a\xfa\xb3\x0e\x1c\x91\x3e\x66\xc7\xb1\x13\x39\xee\x16\x9c\x6b\x14\x16\x01\x9b\x21\x4d\xee\x92\x01\x24\x14\x3e\xee\xd0\x26\xc0\x06\x12\xe2\x64\x18\xf1\xdc\x8e\xec\x5f\x2a\xbf\x55\x3d\x1f\xf8\xb0\x15\xe0\x0a\xdd\x2d\x22\xc1\x01\x38\x86\xb2\x1c\x4e\xd8\x93\xab\xaa\x67\x92\x1f\x97\x45\xf0\x33\x08\x07\x80\x7f\xa8\xf7\x21\x68\xdf\xfe\x4a\x73\xbb\x40\x5a\xa0\xfd\x83\x57\xda\x3b\x2f\xc8\x21\x6c\x8f\xe6\x25\xa9\x4f\x87\x1d\xaa\xb5\x72\xf8\x7b\xd8\x0b\x22\x0a\xa1\x3d\x3e\xdf\x46\x21\x34\x9b\x88\xdf\x45\xfa\xe6\x32\x9d\x2f\x62\x43\x31\x9f\x9d\x4c\x27\xd3\xc5\xb8\xfe\x54\x7f\x9c\x45\x06\xe3\x22\x9d\x9f\xcf\xce\xe6\x69\xcc\xa3\xa9\xcf\x17\xe3\x98\x1c\x73\x76\x08\x16\x4d\x81\xa6\x5d\x50\x43\x98\x3b\xe1\xbc\x85\x8c\x25\x8e\xc2\x69\xb7\xbf\x27\x2c\xb1\xaa\x06\xdb\x2d\xf6\xab\xd8\xac\x96\x87\x5a\x8e\xd6\x8a\x75\x5b\x38\x6d\xbf\x57\x55\x84\x2c\x08\x41\x72\x93\xad\x24\x1b\x30\x81\x85\x87\x30\xa9\xbf\x4b\xb5\x6e\xae\x02\xdb\x24\x77\x40\x64\x8f\xcf\x04\x9e\x2e\x12\x0a\xe9\xf9\x0e\x4a\xe7\x4b\xb8\x24\x71\xa5\x31\x0c\x86\x15\x05\xc2\x46\xfb\xb5\x22\xc8\x98\x56\x6a\x1d\xdd\x17\x67\xf5\x3d\x43\xfd\x15\x36\x6c\x6d\xfd\xad\x40\x0d\x56\xe8\x42\x84\xbf\x5e\xab\xf4\xa6\xbd\x1d\x42\x8f\xc1\xf2\x95\xa2\xed\x52\xe9\xbd\xfb\x19\x00\x00\xff\xff\x6b\x47\x7a\xe8\xc6\x07\x00\x00")

func i18nResourcesPt_brAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesPt_brAllJson,
		"i18n/resources/pt_BR.all.json",
	)
}

func i18nResourcesPt_brAllJson() (*asset, error) {
	bytes, err := i18nResourcesPt_brAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/pt_BR.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesZh_hansAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4d\x4f\x22\x59\x14\x86\xf7\xfc\x8a\x13\x36\xb5\x21\x24\x6e\xd9\x19\xa7\x26\x31\xf3\xa1\x23\xe3\x6a\x98\x45\x49\x1d\xb0\x32\xc5\xbd\x4c\x7d\x60\x08\xa9\xa4\x20\x63\xc4\xaf\x98\x19\x45\x46\x06\x33\x9a\xd1\xc4\xc5\x08\x9a\xb6\x31\x0a\x36\xff\x05\xa9\x5b\xb0\xe2\x2f\x74\xca\x6a\x68\x63\x73\x5b\x70\x43\x8a\x3a\xf7\xbc\xef\x73\x72\xeb\xbc\xbf\x04\x00\x72\x01\x00\x80\xa0\x22\x07\x23\x10\x8c\x11\x91\x18\xa8\x81\x04\xc4\x4c\xad\xa0\x16\x0c\xf9\x55\x43\x93\x88\xae\x4a\x86\x42\x89\x7f\xac\x57\xbf\xed\x7d\xd8\x77\xd6\xcf\x59\xe9\xca\xb9\x2c\x07\x03\x00\x56\xe8\xa5\xda\x2c\x01\xd4\x34\xaa\x01\x8d\xc7\x4d\x4d\x43\x19\xd6\x56\x91\x40\x5c\x43\xc9\x50\x48\x12\x54\x9a\x84\x84\xa2\x22\x08\xb9\x5c\x78\x51\x32\x56\x2d\x4b\x88\xc4\x48\x2e\x17\x16\xbd\x36\xcb\x8a\x91\x18\xe1\x20\x38\xc5\x7f\x9c\xe6\x3d\x2b\x9f\x3b\xed\x32\x3b\xdc\xe8\x36\x1b\x1d\xbb\x3a\x92\xe9\xd8\xc7\xac\xdc\x70\xf6\xfe\x74\x0f\xfe\xed\x1f\x1c\xf5\xea\xf5\x41\xab\xf2\x85\xf2\xc4\xd0\x1e\xa3\x6c\xa6\xd2\x1e\xb4\x86\xbf\x9b\xa8\x1b\x2f\x38\x39\x94\xbd\x87\xff\x9d\xc2\x45\xaf\x7e\xcb\xae\x0b\xaf\x01\xbd\x15\x47\x4f\x53\xa2\xe3\x34\x3c\xce\xfe\xae\x73\x7f\xf0\x36\x9e\x39\x6a\xaa\x32\x10\x6a\x80\x86\x92\x0c\x09\x8d\xa6\x40\x21\x69\xd3\x88\x00\xc7\xf3\x6b\x1d\x63\x2d\x44\x55\x4a\xeb\x28\x47\x38\x7a\x6e\x73\xaf\xd7\xde\x60\xe5\x46\xbf\xd4\x1e\xb4\x2a\xe3\x35\xbe\x9d\x9d\xff\x5e\xfc\x86\xf7\xed\x9c\x5d\xf7\x6e\xce\xc7\x37\xce\x93\x8c\xa4\x2a\x32\x18\xf4\x37\x24\xdc\x99\xba\xcd\x33\x77\x73\x87\x95\x4f\x58\xa9\xc8\x65\x58\xf8\x8e\x37\xc1\x69\xcd\xa9\x71\x9a\x16\x55\x94\x74\x04\x7c\x5a\x43\x21\x2b\x84\x40\x20\xde\x4f\x16\x75\x01\xa8\x06\x02\xa1\x42\x98\x77\xbb\xc3\xa5\xec\xd8\xd5\x6c\xc7\x3e\x7e\xb4\xf3\x1d\xbb\x4a\x46\x4f\x59\xd4\xbd\xc5\x28\x1e\x7a\x6f\xe9\xd3\xeb\xc2\x04\x14\xc3\x30\x80\x15\x34\xd6\x10\x09\xcc\x80\x41\x21\x97\x0b\xcf\x51\x93\x18\x96\xf5\x2a\x0e\xcc\x80\x53\xbc\x7a\xd6\x01\xdd\xbb\xed\x7e\xf9\xc6\xad\xfc\xe1\xc7\xc7\xa4\x1c\xfe\xd5\x24\x54\xea\xe7\x87\x8f\xf5\xaa\x3d\xab\x6e\xb2\x52\xd1\x33\x7b\x5f\x73\x0b\x77\xac\x74\x35\x9d\xdf\xd4\x36\x53\xcc\x94\x91\x54\x13\x27\x97\x76\xec\x16\x57\x77\x49\xfc\x69\x59\x8c\xfe\xcc\x5b\x1b\x3f\x84\x78\x3b\xb7\x24\x46\x17\x17\x7e\x8c\x8a\xbc\x6e\x3f\x32\xb8\xdd\x98\xa2\x06\x82\x8e\x5a\x06\x35\x3f\xaf\xc2\x10\x35\x24\xc3\xd4\x21\x4e\x65\x8c\x78\x77\xef\xff\x9f\xa3\x32\x5a\x56\xe8\x53\xa8\x8d\x8a\x4f\xa9\x33\xac\xa5\x50\xd7\xa5\xa4\x5f\xf8\xc1\x7f\xb6\x2c\xde\x58\xed\xaa\x7b\xb1\xcd\xaa\xbb\xce\xd6\xa9\x73\x74\xe1\x67\xd9\xa3\x5d\x70\xb7\x1a\xcc\xce\xbb\x27\xf9\x41\xab\xf2\xc2\x7c\xd0\xda\xf1\x8f\x75\x9b\xff\x8d\x0e\x3c\x03\x18\xb4\x76\x58\xa3\xc8\xf2\x75\xbf\xf2\x99\x60\xec\xec\xcb\x44\x5a\x51\xd1\xdb\x08\x5d\xca\x20\xa4\x55\x33\xa9\x10\x88\x53\x92\x50\x92\xdc\xfc\xf0\x92\xe3\x5d\xa9\xdb\x3e\x76\x2e\xff\x66\x7b\x7f\x75\x9b\x8d\xfe\xfa\xae\xfb\x50\x1b\x66\x49\xe0\xd7\x8f\x01\x00\x00\xff\xff\xca\x52\xcd\x23\x9b\x07\x00\x00")

func i18nResourcesZh_hansAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesZh_hansAllJson,
		"i18n/resources/zh_Hans.all.json",
	)
}

func i18nResourcesZh_hansAllJson() (*asset, error) {
	bytes, err := i18nResourcesZh_hansAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/zh_Hans.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _i18nResourcesZh_hantAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x4f\x1a\x4f\x18\xbf\xf3\x29\x9e\x70\xd9\x0b\x21\xf1\xca\xcd\xf8\xdf\x7f\x62\xfe\x2f\x5a\xa9\xa7\xd2\xc3\xca\x3e\xe0\xa6\xcb\x0c\xdd\x17\x8c\x21\x9b\x00\xc1\xa8\x05\xdb\x83\x82\x82\x46\x5b\xa3\x0d\xd1\xa8\xb5\x4d\x5b\x8b\xdb\x7e\x19\xdd\xd9\xe5\xc4\x57\x68\x60\xaa\x35\xd6\x11\xf1\x32\xd9\xcd\x33\xbf\x97\x99\x67\x9e\xdf\xb3\x10\x40\x3e\x04\x00\x10\xd6\xd4\x70\x0c\xc2\x09\x22\x13\x0b\x0d\x50\x80\xd8\x99\x19\x34\xc2\x11\x5e\xb5\x0c\x85\x98\xba\x62\x69\x94\xf0\x6d\xc1\x61\x25\x70\xcf\xbc\x85\x7d\x56\x3b\xf3\x8e\xd6\xc3\x21\x00\x27\x72\x9b\x6d\x94\x00\x1a\x06\x35\x80\x26\x93\xb6\x61\xa0\x0a\x73\xb3\x48\x20\x69\xa0\x62\x69\x24\x0d\x3a\x4d\x43\x4a\xd3\x11\xa4\x7c\x3e\x3a\xa9\x58\xb3\x8e\x23\xc5\x12\x24\x9f\x8f\xca\x3d\x98\xe3\x24\x48\x82\x08\x2c\x78\xe7\x6d\xff\xb0\xc2\xd6\xf7\x83\x83\x2a\x3b\x58\xbb\x49\x01\xac\x51\xf2\x1b\xae\xbf\xb6\xd3\xa9\x9e\x04\x07\x7b\x5d\xb7\xf9\x07\xe9\x83\xfd\xf6\xec\xa9\x76\x26\xdb\xf3\x6b\xe0\x4b\x1b\x4d\xeb\x96\x45\x91\xc1\xd2\x0f\x6f\xb1\x1d\xbc\x2f\xb2\xd3\xd2\x20\x43\x8f\xb5\x63\x66\x29\x31\x71\x18\x3f\xde\xe6\x36\x5b\x5c\x7e\x9c\x9f\x31\x6a\xeb\x2a\x10\x6a\x81\x81\x8a\x0a\x29\x83\x66\x40\x23\x59\xdb\x8a\x81\x40\xf3\x3e\xc4\x9d\x12\xb2\xae\x64\x4d\x54\x63\x02\x3e\xff\xcb\x2a\x3b\xfa\xca\x1a\xa5\x4e\x7d\xb5\xeb\x36\xef\xe6\xf8\x7b\x74\xfc\x5f\xf9\x2f\xd1\x2d\xec\x9d\xb2\x9a\xe0\xb9\x8e\x93\x9c\xa2\x6b\x2a\x58\xf4\x05\x12\xe1\x99\xfc\xf2\x3b\x56\x5b\xf2\x9b\xe5\xa0\xb5\x11\x34\x76\x84\x36\x26\xfe\x11\x11\xec\xb6\xbd\x63\x01\x68\x52\x47\xc5\x44\xc0\xfe\x10\x4a\xf3\x52\x04\x24\xd2\x5b\xe6\xd1\x94\x80\x1a\x20\x11\x2a\x45\x05\xbc\xd7\x23\xd9\x03\x5e\x14\x8a\x12\xe9\xaf\x7d\x28\x5b\xaa\xf7\xb1\x17\x85\xd2\x03\x84\xaf\xa6\x1f\x66\xd0\x9a\x43\x24\x30\x02\x16\x85\x7c\x3e\x3a\x46\x6d\x62\x39\xce\x60\x07\x23\xe0\x2d\x7d\xb8\x81\x80\xcb\x6f\x95\x4e\x7d\xd5\x6f\x96\x79\x5e\x3c\xd4\x07\x6f\x48\x4a\xa7\x3c\x30\xb8\xad\x81\xf2\x6c\x6b\x99\xb7\x88\x7d\x3e\xee\x9c\x6f\xb3\xda\xd9\x70\x7a\x43\xcb\x0c\x71\xa6\x9c\xa2\xdb\x38\x90\xda\x2b\xb8\x42\xba\x29\xf9\xc9\xb4\x1c\x7f\x2a\x9a\x11\x9e\x38\xc2\x67\x39\x25\xc7\x27\x27\xfe\x8f\xcb\x22\x38\x0f\x08\x31\x1c\x33\xd4\x42\x30\xd1\xc8\xa1\xc1\xe3\x29\x0a\x71\x4b\xb1\x6c\x13\x92\x54\xc5\x58\xaf\xe9\xfc\x7f\x8c\xaa\xe8\x38\x91\x5f\x19\x76\x5d\xec\x87\xcc\x55\x2d\x83\xa6\xa9\xa4\x79\xe1\x3f\xfe\xed\x38\x02\x67\x9d\xe2\x5b\xff\xf0\xe4\xd2\x6d\xb3\xad\x15\xaf\xd1\xe2\xd1\x75\x51\x28\xf9\x95\x02\x5b\xa8\xf8\xbb\x6e\xd7\x6d\xde\x12\xef\xba\x55\xbe\xed\xba\x7a\x43\xbd\xeb\x56\x83\xd6\x2b\x56\x3c\xe1\x95\xdf\xf2\x77\x1e\x7c\x9a\x28\x33\x3a\xf6\xe6\xc0\x54\x72\x08\x59\xdd\x4e\x6b\x04\x92\x94\xa4\xb4\xf4\xbd\x59\xf1\xa9\xe6\x95\x3f\x7a\x47\x1b\xde\x5e\x9d\xbd\xde\xf4\x5b\x15\xcf\x7d\xd3\x59\x58\xf1\xbf\x1f\x5f\x5d\x72\xe8\xf9\xcf\x00\x00\x00\xff\xff\x77\x13\xc4\x2e\x88\x07\x00\x00")

func i18nResourcesZh_hantAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_i18nResourcesZh_hantAllJson,
		"i18n/resources/zh_Hant.all.json",
	)
}

func i18nResourcesZh_hantAllJson() (*asset, error) {
	bytes, err := i18nResourcesZh_hantAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "i18n/resources/zh_Hant.all.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"i18n/resources/de_DE.all.json":   i18nResourcesDe_deAllJson,
	"i18n/resources/en_US.all.json":   i18nResourcesEn_usAllJson,
	"i18n/resources/es_ES.all.json":   i18nResourcesEs_esAllJson,
	"i18n/resources/fr_FR.all.json":   i18nResourcesFr_frAllJson,
	"i18n/resources/it_IT.all.json":   i18nResourcesIt_itAllJson,
	"i18n/resources/ja_JP.all.json":   i18nResourcesJa_jpAllJson,
	"i18n/resources/ko_KR.all.json":   i18nResourcesKo_krAllJson,
	"i18n/resources/pt_BR.all.json":   i18nResourcesPt_brAllJson,
	"i18n/resources/zh_Hans.all.json": i18nResourcesZh_hansAllJson,
	"i18n/resources/zh_Hant.all.json": i18nResourcesZh_hantAllJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"i18n": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"de_DE.all.json":   &bintree{i18nResourcesDe_deAllJson, map[string]*bintree{}},
			"en_US.all.json":   &bintree{i18nResourcesEn_usAllJson, map[string]*bintree{}},
			"es_ES.all.json":   &bintree{i18nResourcesEs_esAllJson, map[string]*bintree{}},
			"fr_FR.all.json":   &bintree{i18nResourcesFr_frAllJson, map[string]*bintree{}},
			"it_IT.all.json":   &bintree{i18nResourcesIt_itAllJson, map[string]*bintree{}},
			"ja_JP.all.json":   &bintree{i18nResourcesJa_jpAllJson, map[string]*bintree{}},
			"ko_KR.all.json":   &bintree{i18nResourcesKo_krAllJson, map[string]*bintree{}},
			"pt_BR.all.json":   &bintree{i18nResourcesPt_brAllJson, map[string]*bintree{}},
			"zh_Hans.all.json": &bintree{i18nResourcesZh_hansAllJson, map[string]*bintree{}},
			"zh_Hant.all.json": &bintree{i18nResourcesZh_hantAllJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
